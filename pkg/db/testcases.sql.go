// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: testcases.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const getTestcases = `-- name: GetTestcases :many
SELECT
    id,
    expected_output,
    memory,
    input,
    hidden,
    runtime,
    question_id
FROM testcases
WHERE question_id = $1
`

func (q *Queries) GetTestcases(ctx context.Context, questionID uuid.UUID) ([]Testcase, error) {
	rows, err := q.db.Query(ctx, getTestcases, questionID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Testcase
	for rows.Next() {
		var i Testcase
		if err := rows.Scan(
			&i.ID,
			&i.ExpectedOutput,
			&i.Memory,
			&i.Input,
			&i.Hidden,
			&i.Runtime,
			&i.QuestionID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
